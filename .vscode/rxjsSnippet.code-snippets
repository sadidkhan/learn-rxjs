{
	// Place your rxjs-test workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Create Observable": {
		"scope": "javascript,typescript",
		"prefix": "observable",
		"body": [
			"const observable = new Observable(subscriber => {",
			"\tsubscriber.next(1);",
			"\tsubscriber.next(2);",
			"\tsubscriber.next(3);",
			"\tsetTimeout(() => { ",
			"\t\tsubscriber.next(4);",
			"\t\tsubscriber.complete();",
			"\t}, 1000); ",
			"});",
			"$2"
		],
		"description": "create a observable using rxjs"
	},
	"Create Observer": {
		"scope": "javascript,typescript",
		"prefix": "observer",
		"body": [
			"observable.subscribe({",
				"\tnext(x) { console.log('value ' + x); },",
				"\terror(err) { console.error('error: ' + err); },",
				"\tcomplete() { console.log('done'); }",
			  "});",
			"$2"
		],
		"description": "create a observer using rxjs"
	}
}
